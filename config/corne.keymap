/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
        };

        Copiar {
            bindings = <&kp LC(C)>;
            key-positions = <3 2>;
        };

        Pegar {
            bindings = <&kp LC(V)>;
            key-positions = <14 15>;
        };

        PegaTex {
            bindings = <&kp LS(LC(V))>;
            key-positions = <26 27>;
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp RA(N)>;
        };
    };

    macros {
        Captura: M1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(S))>;
            label = "M1";
        };

        Clave: Clave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp LS(F) &kp A &kp B &kp I &kp A &kp N &kp DOT &kp N1 &kp N6 &kp ENTER>;
            label = "CLAVE";
        };

        PantallaCompleta: PantallaCompleta {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp Z &kp R &kp M &kp M &kp RET>;
            label = "PANTALLACOMPLETA";
        };

        PantallaNormal: PantallaNormal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp Z &kp R &kp M &kp RET>;
            label = "PANTALLANORMAL";
        };

        ActualizarT: ActualizarT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp D &kp K &kp N1 &kp A>;
            label = "ACTUALIZART";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------

            bindings = <
&kp TAB            &kp Q  &kp W  &kp E     &kp R  &kp T               &kp Y             &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_ALT CAPS  &kp A  &kp S  &kp D     &kp F  &kp G               &kp H             &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT          &kp Z  &kp X  &kp C     &kp V  &kp B               &kp N             &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_ALT DEL
                                 &kp LGUI  &mo 1  &mt LSHIFT ENTER    &mt LSHIFT SPACE  &mo 2  &mo 4
            >;
        };

        raise_layer {
            bindings = <
&kp ESC    &kp PAGE_DOWN     &kp PAGE_DOWN            &kp UP_ARROW            &kp PAGE_UP        &kp DEL          &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTRK   &kp BSPC
&kp LALT   &kp SPACE         &kp LEFT_ARROW           &kp DOWN_ARROW          &kp RIGHT          &kp BACKSPACE    &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH   &kp COLON
&kp LCTRL  &kp LS(LG(LEFT))  &kp LS(LG(RIGHT_ARROW))  &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT))  &kp LG(LS(S))    &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &trans
                                                      &trans                  &trans             &trans           &trans     &trans        &trans
            >;
        };

        lower_layer {
            bindings = <
&kp ESC  &kp EXCL   &kp AT     &kp HASH           &kp DOLLAR     &kp PERCENT         &kp PLUS  &kp AMPERSAND  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH  &kp BSPC
&trans   &kp TILDE  &kp CARET  &kp APOS           &kp LESS_THAN  &kp GREATER_THAN    &kp LEFT  &kp DOWN       &kp UP          &kp RIGHT        &kp PIPE       &kp SINGLE_QUOTE
&trans   &trans     &trans     &kp DOUBLE_QUOTES  &trans         &Captura            &trans    &trans         &trans          &trans           &kp SLASH      &trans
                               &trans             &trans         &trans              &trans    &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&kp F13     &kp F14       &kp F15       &kp F16       &kp F17       &kp NUMBER_3    &to 0   &to 1   &to 2   &to 3    &to 4    &to 5
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans   &trans   &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans     &trans  &trans  &trans  &trans  &kp HOME        &Clave  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &trans            &trans  &PantallaCompleta
&none      &none   &none   &none   &none   &kp NUMBER_4    &trans  &kp K_VOLUME_UP  &kp K_VOLUME_DOWN  &kp C_PLAY_PAUSE  &trans  &PantallaNormal
&kp LCTRL  &none   &trans  &none   &none   &kp END         &trans  &kp DEL          &kp C_MUTE         &kp K_CALC        &trans  &trans
                           &trans  &trans  &trans          &trans  &trans           &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp N5    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        capa4 {
            if-layers = <1 2>;
            then-layer = <3>;
        };

        capa5 {
            if-layers = <1 4>;
            then-layer = <5>;
        };
    };
};
